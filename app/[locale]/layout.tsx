import { Toaster } from '@/components/ui/sonner'
import { SidebarProvider } from '@/context/SidebarContext'
import { ThemeProvider } from '@/context/ThemeContext'
import { Locale } from '@/i18n/navigation'
import { routing } from '@/i18n/routing'
import type { Metadata } from 'next'
import { NextIntlClientProvider } from 'next-intl'
import { getMessages } from 'next-intl/server'
import { Outfit } from 'next/font/google'
import { notFound } from 'next/navigation'
import { Suspense } from 'react'

import './globals.css'
const outfit = Outfit({
	subsets: ['latin', 'latin-ext'],
})

// const geistSans = Geist({
// 	variable: '--font-geist-sans',
// 	subsets: ['latin'],
// })

// const geistMono = Geist_Mono({
// 	variable: '--font-geist-mono',
// 	subsets: ['latin'],
// })

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
}

export default async function RootLayout({
	children,
	params,
}: {
	children: React.ReactNode
	params: Promise<{ locale: string }>
}) {
	const { locale } = await params

	if (!routing.locales.includes(locale as Locale)) {
		notFound()
	}
	const messages = await getMessages()

	return (
		<html lang='en' suppressHydrationWarning>
			<body className={`${outfit.className} antialiased dark:bg-gray-900 `}>
				<Suspense fallback={<div>Loading...</div>}>
					<NextIntlClientProvider messages={messages}>
						<ThemeProvider>
							<Toaster />
							<SidebarProvider>{children}</SidebarProvider>
						</ThemeProvider>
					</NextIntlClientProvider>
				</Suspense>
			</body>
		</html>
	)
}
